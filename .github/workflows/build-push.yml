name: Build and Push to Quay

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: quay.io
  REPOSITORY: yoza
  PROJECT_NAME: spending-monitor

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [ui, api, db]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Debug credentials
      run: |
        echo "Registry: ${{ env.REGISTRY }}"
        echo "Username exists: ${{ secrets.QUAY_USERNAME != '' }}"
        echo "Password exists: ${{ secrets.QUAY_PASSWORD != '' }}"

    - name: Login to Quay.io
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.PROJECT_NAME }}-${{ matrix.package }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./packages/${{ matrix.package }}/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  update-image-tag:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Makefile with new image tag
      run: |
        # Extract short SHA for the image tag
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
        NEW_TAG="main-${SHORT_SHA}"
        
        # Update the IMAGE_TAG in Makefile
        sed -i "s/^IMAGE_TAG ?= .*/IMAGE_TAG ?= ${NEW_TAG}/" Makefile
        
        # Check if there are changes
        if git diff --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Commit and push
        git add Makefile
        git commit -m "ci: update image tag to ${NEW_TAG}"
        git push